openapi: 3.0.0
info:
  title: Expense Tracker
  version: 1.0.0
  description: A project which tracks the expense
servers:
  - url: /api/v1/admin/
    description: Local server
paths:
  /register:
    post:
      summary: Register a new admin
      description: Register a new admin with the required details.
      tags:
        - Admin
      requestBody:
        description: Admin registration details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: admin
                email:
                  type: string
                  example: admin@example.com
                password:
                  type: string
                  example: password123
      responses:
        '200':
          description: Admin registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Admin registered successfully
        '400':
          description: Bad request
        '500':
          description: Internal server error
  /login:
    post:
      summary: Login an admin
      description: Login an admin with email and password.
      tags:
        - Admin
      requestBody:
        description: Admin login details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: admin@example.com
                password:
                  type: string
                  example: password123
      responses:
        '200':
          description: Admin logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Admin logged in successfully
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

  /logout:
    post:
      summary: Logout an admin
      description: Logout an admin with email and password.
      tags:
        - Admin
      responses:
        '200':
          description: Admin logged out in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Admin logged in successfully
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

  /users/createUser:
    post:
      summary: Create a new user
      description: Create a new user with the required details. Requires admin authentication.
      tags:
        - User
      security:
        - bearerAuth: []
      requestBody:
        description: User creation details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                empId:
                  type: string
                  example: 1000
                userName:
                  type: string
                  example: John Wick
                email:
                  type: string
                  example: jhonwick@gmail.com
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User created successfully
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

  /users/getUsers:
    get:
      summary: Get all users
      description: Retrieve a list of all users with pagination. Requires admin authentication.
      tags:
        - User
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number for pagination
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Number of users to return per page
      responses:
        '200':
          description: Successfully retrieved list of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: number
                    example: 5
                  limit:
                    type: number
                    example: 1
                  totalUsers:
                    type: number
                    example: 4
                  totalPages:
                    type: number
                    example: 6
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          example: 60d0fe4f5311236168a109ca
                        empId:
                          type: string
                          example: 1000
                        userName:
                          type: string
                          example: John Doe
                        email:
                          type: string
                          example: johndoe@example.com
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

  /users/updateUser/{empId}:
    patch:
      summary: Update a user
      description: Update the details of an existing user. Requires admin authentication.
      tags:
        - User
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: empId
          required: true
          schema:
            type: string
            default: 1000
          description: Employee Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userName:
                  type: string
                  example: Jane Doe
                email:
                  type: string
                  example: janedoe@example.com
      responses:
        '200':
          description: Successfully updated the user
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User updated successfully
                  user:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: 60d0fe4f5311236168a109ca
                      userName:
                        type: string
                        example: Jane Doe
                      email:
                        type: string
                        example: janedoe@example.com
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: User not found
        '500':
          description: Internal server error
  
  /users/deleteUser/{empId}:
    delete:
      summary: Delete a user
      description: Delete an existing user by their ID. Requires admin authentication.
      tags:
        - User
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: empId
          required: true
          schema:
            type: string
            default: 1000
          description: Employee Id
      responses:
        '200':
          description: Successfully deleted the user
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User deleted successfully
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: User not found
        '500':
          description: Internal server error

  /expenseTypes/createExpenseType:
    post:
      summary: Create Expense Type
      description: Creates a new expense type. Requires admin JWT verification.
      tags:
        - ExpenseType
      security:
        - bearerAuth: []
      requestBody:
        description: Expense type object that needs to be added
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  type: string
                  example: Gym
                description:
                  type: string
                  example: category description
                limit:
                  type: number
                  example: 1000
              required:
                - category
                - description
                - limit
      responses:
        '200':
          description: Expense type created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    example: 12345
                  category:
                    type: string
                    example: Gym
                  description:
                    type: string
                    example: category description
                  limit:
                    type: number
                    example: 1000
        '400':
          description: Invalid input
        '401':
          description: Unauthorized

  /expenseTypes/updateExpenseType/{category}:
    patch:
      summary: Update an Expense Type
      description: Update the details of an existing expense type. Requires admin JWT verification.
      tags:
        - ExpenseType
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: category
          required: true
          schema:
            type: string
            example: Travel
          description: Category of the expense type to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  example: Expenses for travel purposes
                limit:
                  type: number
                  example: 10000
      responses:
        '200':
          description: Successfully updated the expense type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Expense type updated successfully
                  expenseType:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: 12345
                      category:
                        type: string
                        example: Travel
                      description:
                        type: string
                        example: Expenses for travel purposes
                      limit:
                        type: string
                        example: 1000
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Expense type not found
        '500':
          description: Internal server error

  /expenseTypes/deleteExpenseType/{category}:
    delete:
      summary: Delete an Expense Type
      description: Delete an existing expense type. Requires admin JWT verification.
      tags:
        - ExpenseType
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: category
          required: true
          schema:
            type: string
            example: Travel
          description: Category of the expense type to delete
      responses:
        '200':
          description: Successfully deleted the expense type
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Expense type deleted successfully
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Expense type not found
        '500':
          description: Internal server error
  
  /expenseTypes/allExpenseTypes:
    get:
      summary: Get All Expense Types
      description: Retrieve a list of all expense types. Requires admin JWT verification.
      tags:
        - ExpenseType
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully retrieved all expense types
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: 12345
                    name:
                      type: string
                      example: Travel
                    description:
                      type: string
                      example: Expenses for travel purposes
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT